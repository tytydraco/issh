#!/usr/bin/env bash

# Options
PORT=65432
INTERACTIVE=false
ADDRESS="localhost"

# Display usage for this script
usage() {
  echo "Insecure shelling via netcat

Usage: $0 [-h] [-p PORT] [-C ADDRESS] [-L] [-t]
  -h            Show this screen
  -p PORT       Port to listen/connect on (default: $PORT)
  -C ADDRESS    Connect to an open session (default: $ADDRESS)
  -L            Connect to an open localhost session
  -t            Use raw TTY for interactivity"
}

# Make sure we have everything we need to run
assert_dependencies() {
  if ! command -v toybox &>/dev/null
  then
    echo "Toybox binary inaccessible"
    exit 1
  fi
}

# Check if port is out of range
is_port_within_range() {
  [[ "$1" -gt 1 && "$1" -lt 65535 ]]
}

# Bail if port is out of range
assert_port_within_range() {
  if ! is_port_within_range "$1"
  then
    echo "Port is out of range (1-65535): $1"
    exit 1
  fi
}

# Parse arguments passed to us and set relevant variables
parse_options() {
  while getopts ":hp:C:Lt" opt
  do
    case "$opt" in
    h)
      usage
      exit 0
      ;;
    p)
      PORT="$OPTARG"
      assert_port_within_range "$PORT"
      ;;
    C)
      MODE="$MODE_CLIENT"
      ADDRESS="$OPTARG"
      ;;
    L)
      MODE="$MODE_CLIENT"
      ADDRESS="localhost"
      ;;
    t)
      INTERACTIVE=true
      ;;
    *)
      usage
      exit 1
      ;;
    esac
  done
}

# Connect to host
client() {
  [[ "$INTERACTIVE" == true ]] && stty raw -echo icrnl opost
  toybox nc "$ADDRESS" "$PORT"
  [[ "$INTERACTIVE" == true ]] && stty sane
}

parse_options "$@"
assert_dependencies

